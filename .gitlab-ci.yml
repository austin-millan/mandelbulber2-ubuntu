image: docker:dind

stages:
  - release
  - latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY_IMAGE
  - apk add jq curl

release:
  stage: release
  image: docker:dind
  only:
    - master
    - schedules
  services:
    - docker:dind
  script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_SECRET
    - |
      count=0
      for tag in $(curl -s "https://api.github.com/repos/buddhi1980/mandelbulber2/releases" | jq -r '.[].tag_name'); do
          if [ "$tag" = "continuous" ]; then
              continue
          fi
          if [ $count -ge 5 ]; then
              break
          fi
          echo "building version: $tag"
          if [ "$count" -eq 0 ]; then
              echo "latest: $tag"
              docker build --build-arg VERSION=${tag} -t $CI_PROJECT_NAME:latest . 
              docker tag $CI_PROJECT_NAME:latest registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:latest
              docker push registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:latest
              docker tag $CI_PROJECT_NAME:${latest} $DOCKERHUB_USER/$CI_PROJECT_NAME:latest
              docker push $DOCKERHUB_USER/$CI_PROJECT_NAME:latest
          fi
          docker build --cache-from registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:${tag} --build-arg VERSION=${tag} -t $CI_PROJECT_NAME:${tag} .
          docker tag $CI_PROJECT_NAME:${tag} registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:${tag}
          docker push registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:${tag}
          docker tag $CI_PROJECT_NAME:${tag} $DOCKERHUB_USER/$CI_PROJECT_NAME:${tag}
          docker push $DOCKERHUB_USER/$CI_PROJECT_NAME:${tag}
          count=$((count+1))
      done

    # - |
    #   for tag in $(curl -s "https://api.github.com/repos/buddhi1980/mandelbulber2/releases" | jq -r '.[].tag_name'); do
    #     docker build --cache-from $CI_PROJECT_NAME:${tag} --build-arg VERSION=${tag} --tag $CI_PROJECT_NAME:${tag} .
    #     docker tag $CI_PROJECT_NAME:${tag} registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:${tag}
    #     docker push registry.gitlab.com/mandelbulber/$CI_PROJECT_NAME:${tag}
    #   done
    #    docker save $CI_PROJECT_NAME:${tag} | gzip > $CI_PROJECT_NAME.tar.gz
    # - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_SECRET
    # - docker tag $CI_PROJECT_NAME:${MANDELBULBER_VERSION} $DOCKERHUB_USER/$CI_PROJECT_NAME:latest
    # - docker push $DOCKERHUB_USER/$CI_PROJECT_NAME:latest

# latest-gitlab:
#   stage: latest
#   image: docker:dind
#   dependencies:
#     - release
#   services:
#     - docker:dind
#   only:
#     - master
#     - schedules
#   script:
#     - docker pull $CI_REGISTRY_IMAGE:latest
#     - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:latest
#     - docker push $CI_REGISTRY_IMAGE:latest

# latest-dockerhub:
#   stage: latest
#   image: docker:dind
#   dependencies:
#     - release
#   services:
#     - docker:dind
#   only:
#     - master
#     - schedules
#   script:
#     - docker pull $CI_REGISTRY_IMAGE:latest
#     - docker tag $CI_REGISTRY_IMAGE $DOCKERHUB_USER/$CI_PROJECT_NAME:latest
#     - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_SECRET
#     - docker push $DOCKERHUB_USER/$CI_PROJECT_NAME:latest
